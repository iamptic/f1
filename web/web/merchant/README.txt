Foody Â· Merchant Web (bundle)
=============================

Structure:
- web/merchant/
  - index.html
  - style.css (dark theme)
  - merchant_cards.css (cards/dashboard styles)
  - offers_actions.css (+ offers_actions.patch.css)
  - foody.pw.css, foody.pw.js (password toggle utilities)
  - app.js (core LK logic: auth, profile, offers, city picker, QR, etc.)
  - merchant_app.js (dashboard + offers as cards)
  - foody_tabs_gate_fix.js (gate + tab routing helper)
  - offer_photo_filepond.css (placeholder)
  - css/uploader.css (placeholder)

Backend:
- FOODY_API is resolved from /config.js, or falls back to https://foodyback-production.up.railway.app

Deploy:
1) Place this 'web/merchant' folder into your repo under the 'web' project root.
2) Ensure your production serves /config.js that defines:
   window.__FOODY__ = { FOODY_API: "https://foodyback-production.up.railway.app" };
3) Start command on Railway (unchanged): node server.js
4) Open https://foodyweb-production.up.railway.app/web/merchant/

Notes:
- The placeholders (offer_photo_filepond.css, css/uploader.css) are no-ops to prevent 404s. Replace with your actual assets if needed.
- All tabs and gate logic rely on localStorage creds (foody_restaurant_id/api_key) or foody_auth, depending on your auth flow.
- If CORS blocks requests, verify 'CORS_ORIGINS' on backend includes web and bot domains.

Last updated: autogenerated bundle.
